/* Give a remote user a caret */
.collaboration-cursor__caret {
  border-left: 1px solid;
  border-right: 1px solid;
  margin-left: -1px;
  margin-right: -1px;
  pointer-events: none;
  position: relative;
  word-break: normal;
  transition: 0.5s;
}

/* Render the username above the caret */
.collaboration-cursor__label {
  border-radius: 3px 3px 3px 0;
  color: #0d0d0d;
  font-size: 12px;
  font-style: normal;
  font-weight: 600;
  left: -1px;
  line-height: normal;
  padding: 0.1rem 0.3rem;
  position: absolute;
  top: -1.4em;
  user-select: none;
  white-space: nowrap;
  pointer-events: none;
}

/* Fade cursor on hover */
*:hover > .collaboration-cursor__caret {
  opacity: 0.7;
  transition: 0.5s;
}

/* Basic Styles */

.ProseMirror-focused {
  /* Remove blue border on selecting the editor */
  outline: none;
}

/* The 'notes' portion */
.ProseMirror > * + * {
  /* Add some space between title and notes */
  margin-top: 0.75em;
}

.ProseMirror :is(h1, h2, h3, h4, h5, h6) {
  line-height: 1.1;
}

.ProseMirror p {
  margin: 0;
}

/* Code (adapted from Github) */
.ProseMirror code {
  background-color: rgba(99, 110, 123, 0.4);
  border-radius: 6px;
  padding: 0.2em 0.4em;
  font-size: 85%;
  color: rgb(173, 186, 199);
  font-family: JetBrains Mono, ui-monospace, SFMono-Regular, Menlo, Monaco,
    Consolas, Liberation Mono, Courier New, monospace;
}

.ProseMirror pre {
  background: #0d0d0d;
  color: #fff;
  padding: 0.75rem 1rem;
  border-radius: 0.5rem;
}

.ProseMirror pre code {
  color: inherit;
  padding: 0;
  background: none;
  font-size: 0.8rem;
}

/* Random */
.ProseMirror img {
  max-width: 100%;
  height: auto;
}

.ProseMirror blockquote {
  padding-left: 1rem;
  border-left: 2px solid rgba(#0d0d0d, 0.1);
}

.ProseMirror hr {
  border: none;
  border-top: 2px solid rgba(#0d0d0d, 0.1);
  margin: 2rem 0;
}
/* Tasklists */
.ProseMirror ul,
.ProseMirror ol {
  padding: 0 1rem;
}

.ProseMirror ul[data-type="taskList"] {
  list-style: none;
  padding: 0;
}

.ProseMirror ul[data-type="taskList"] li {
  display: flex;
}

.ProseMirror ul[data-type="taskList"] li > label {
  flex: 0 0 auto;
  margin-right: 0.5rem;
  user-select: none;
}

.ProseMirror ul[data-type="taskList"] li > div {
  flex-grow: 1;
  /* Allow shrinking */
  min-width: 0;
}

/* Placeholder */
.ProseMirror :is(p, h2).is-empty:nth-child(-n + 2)::before {
  color: #5c5f66;
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

/* Table */
.ProseMirror table {
  border-collapse: collapse;
  margin: 0;
  overflow: hidden;
  table-layout: fixed;
  width: 100%;
}

.ProseMirror :is(td,th) {
  border: 2px solid #ced4da;
  box-sizing: border-box;
  min-width: 1em;
  padding: 3px 5px;
  position: relative;
  vertical-align: top;
}

.ProseMirror td {
  margin-bottom: 0;
}

.ProseMirror > * {
  margin-bottom: 0;
}

/* Table Header */
.ProseMirror th {
  background-color: #3e3e3e;
  font-weight: bold;
  text-align: left;
  background-clip: padding-box;
}

.ProseMirror .selectedCell:after {
  background: rgba(200, 200, 255, 0.4);
  content: "";
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  pointer-events: none;
  position: absolute;
  z-index: 2;
}

.ProseMirror .column-resize-handle {
  background-color: #adf;
  bottom: -2px;
  position: absolute;
  right: -2px;
  pointer-events: none;
  top: 0;
  width: 4px;
}

.ProseMirror p {
  margin: 0;
}

.tableWrapper {
  padding: 1rem 0;
  overflow-x: auto;
}

.resize-cursor {
  cursor: ew-resize;
  cursor: col-resize;
}
